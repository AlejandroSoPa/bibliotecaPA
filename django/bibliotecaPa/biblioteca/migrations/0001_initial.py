# Generated by Django 5.0.4 on 2024-04-22 13:44

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titol', models.CharField(max_length=200)),
                ('descripcio', models.TextField()),
                ('autor', models.CharField(max_length=200)),
                ('data_publicacio', models.DateField()),
                ('imatge', models.ImageField(blank=True, default='default.jpg', null=True, upload_to='imatges_cataleg')),
            ],
        ),
        migrations.CreateModel(
            name='Centre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='BR',
            fields=[
                ('article_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='biblioteca.article')),
                ('durada', models.DurationField()),
                ('estudi', models.CharField(max_length=100)),
            ],
            bases=('biblioteca.article',),
        ),
        migrations.CreateModel(
            name='CD',
            fields=[
                ('article_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='biblioteca.article')),
                ('estil', models.CharField(max_length=100)),
                ('discografia', models.CharField(max_length=100)),
                ('durada', models.DurationField()),
            ],
            bases=('biblioteca.article',),
        ),
        migrations.CreateModel(
            name='Dispositiu',
            fields=[
                ('article_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='biblioteca.article')),
                ('marca', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            bases=('biblioteca.article',),
        ),
        migrations.CreateModel(
            name='DVD',
            fields=[
                ('article_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='biblioteca.article')),
                ('director', models.CharField(max_length=100)),
                ('durada', models.DurationField()),
            ],
            bases=('biblioteca.article',),
        ),
        migrations.CreateModel(
            name='Llibre',
            fields=[
                ('article_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='biblioteca.article')),
                ('CDU', models.CharField(max_length=100)),
                ('ISBN', models.CharField(max_length=13)),
                ('editor', models.CharField(max_length=100)),
                ('colleccio', models.CharField(max_length=100)),
                ('pagines', models.IntegerField()),
                ('signatura', models.CharField(max_length=100)),
            ],
            bases=('biblioteca.article',),
        ),
        migrations.CreateModel(
            name='Usuari',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('admin', models.BooleanField(default=False)),
                ('data_naixement', models.DateField()),
                ('cicle', models.CharField(blank=True, max_length=100, null=True)),
                ('imatge', models.ImageField(default='default.jpg', upload_to='fotos_perfil')),
                ('centre', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='biblioteca.centre')),
                ('groups', models.ManyToManyField(related_name='usuari_group', to='auth.group')),
                ('user_permissions', models.ManyToManyField(related_name='usuarios_permision', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Solicitud',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_sol·licitud', models.DateField(auto_now_add=True)),
                ('text_sol·licitud', models.TextField()),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='biblioteca.article')),
                ('centre_solicitant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='peticio_solicitant', to='biblioteca.centre')),
                ('usuari', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='biblioteca.usuari')),
            ],
        ),
        migrations.CreateModel(
            name='Reserva',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_reserva', models.DateTimeField(auto_now_add=True)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='biblioteca.article')),
                ('usuari', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='biblioteca.usuari')),
            ],
        ),
        migrations.CreateModel(
            name='Prestec',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_préstec', models.DateTimeField(auto_now_add=True)),
                ('data_retorn', models.DateTimeField(blank=True, null=True)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='biblioteca.article')),
                ('usuari', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='biblioteca.usuari')),
            ],
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('esdeveniment', models.CharField(max_length=200)),
                ('nivell', models.CharField(max_length=20)),
                ('data', models.DateTimeField(auto_now_add=True)),
                ('ruta', models.CharField(max_length=100)),
                ('usuari', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='biblioteca.usuari')),
            ],
        ),
    ]
